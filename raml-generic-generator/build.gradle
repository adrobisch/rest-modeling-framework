apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

ext {
    apiProperty = 'api'
}

sourceSets {
    main {
        resources {
            srcDirs += "$buildDir/resources/main/raml"
        }
    }
    test {
        resources {
            srcDirs += "$buildDir/php"
        }
    }
}

dependencies {
    compile project(':functional-utils')
    compile project(':raml-model')

    compile _antlr.stringtemplate
    compile google.guava

    compile commons.lang3
    compile commons.cli
    compile commons.io

    compile squareup.javapoet

    compile jackson_core.annotations
    compile jackson_core.databind

    compile hypertino.inflector

    testCompile junit.junit
    testCompile assertj.core

    testCompile spockframework.spock_core
}

mainClassName = "io.vrap.rmf.raml.generic.generator.CodeGenerator"

task downloadCtpApiZipFile(type: Download) {
    src 'https://github.com/commercetools/commercetools-api-reference/archive/master.zip'
    dest new File("$projectDir/cache", 'commercetools-api-reference.zip')
    onlyIfNewer(true)
    overwrite(false)
}

task downloadAndUnzipCtpApiFile(dependsOn: downloadCtpApiZipFile, type: Copy) {
    from zipTree(downloadCtpApiZipFile.dest)
    into "$buildDir/resources/main/raml"
}

test.dependsOn(':raml-model:test')
build.dependsOn(downloadAndUnzipCtpApiFile)
downloadCtpApiZipFile.onlyIf { project.hasProperty(apiProperty) }
downloadAndUnzipCtpApiFile.onlyIf { project.hasProperty(apiProperty) }

shadowJar {
    append 'plugin.properties'
    baseName = 'rmf-gen'
    classifier = null
    version = null
}
