import "generic.stg"

collectionInterface(vendorName, type, package, builtInParent, typePackage, uses, identifiers) ::= <<
\<?php
<generatorInfo()>

namespace <vendorName>\\<package; format="capitalize"><if(typePackage)>\\<typePackage.value.value><endif>;

use <vendorName>\\Base\\Collection;

interface <type.name>Collection extends Collection {
    /**
     * @param $index
     * @return <type.name>
     */
    public function at($index);

    /**
     * @return <type.name>
     */
    public function current();

    /**
     * @param $data
     * @param $index
     * @return <type.name>
     */
    public function map($data, $index);
    <if(identifiers)>

    <identifiers: {id |<indexGetter(type, id)>}>
    <endif>
}

>>

indexGetter(type, identifier) ::=<<

/**
 * @return <type.name>
 */
public function by<identifier; format="capitalize">($<identifier>);
>>
