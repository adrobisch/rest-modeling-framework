plugins {
    id "org.xtext.builder" version "1.0.18"
    id "antlr"
    id "de.undercouch.download" version "3.2.0"
}

import de.undercouch.gradle.tasks.download.Download

ext {
    xtextVersion = '2.10.0'
}

xtext {
    version = xtextVersion

	languages {
		ecore {
			setup = 'org.eclipse.xtext.ecore.EcoreSupport'
		}
		codegen {
			setup = 'org.eclipse.emf.codegen.ecore.xtext.GenModelSupport'
		}
		xcore {
			setup = 'org.eclipse.emf.ecore.xcore.XcoreStandaloneSetup'
        	generator.outlet.producesJava = true
		}
	}
	sourceSets {
        main {
            srcDir 'model'
            output {
                dir(xtext.languages.xcore.generator.outlet, 'src/main/java-gen')
            }
        }
	}
}

generateGrammarSource {
    outputDirectory = file("src/main/java-gen/io/vrap/rmf/raml/persistence/antlr")
    arguments += ["-visitor"]
}

clean {
    delete 'src/main/java-gen'
}

task copyTokens(type: Copy) {
    from 'src/main/java-gen'
    include '**/*.tokens'
    into 'build/classes/main'
}

processResources.dependsOn(copyTokens)

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'com.tngtech.java:junit-dataprovider:1.12.0'
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile "org.spockframework:spock-core:${versions.spock}"

    compile project(':functional-utils')
    compile 'org.yaml:snakeyaml:1.18'

    compile 'org.eclipse.emf:org.eclipse.emf.common:2.11+'
    compile 'org.eclipse.emf:org.eclipse.emf.ecore:2.11+'
    compile 'org.eclipse.emf:org.eclipse.emf.ecore.xcore.lib:1.1.100'
    compile "org.eclipse.xtext:org.eclipse.xtext.xbase.lib:$xtextVersion"

    antlr "org.antlr:antlr4:4.7"

    xtextLanguages 'org.eclipse.jdt:org.eclipse.jdt.core:3.10.0'
    xtextLanguages 'org.eclipse.text:org.eclipse.text:3.5.101'
    xtextLanguages 'org.eclipse.core:org.eclipse.core.resources:3.7.100'
    xtextLanguages "org.eclipse.xtext:org.eclipse.xtext.ecore:$xtextVersion"
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.codegen.ecore.xtext:1.2.0'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.common:2.11+'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.ecore:2.11+'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.11+'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.ecore.xcore:1.3.1'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.ecore.xcore.lib:1.1.100'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.codegen:2.11+'
    xtextLanguages 'org.eclipse.emf:org.eclipse.emf.codegen.ecore:2.11+'
}

task downloadZipFile(type: Download) {
    src 'https://github.com/raml-org/raml-tck/archive/v1.1.zip'
    dest new File(buildDir, 'raml-tck-1.1.zip')
    onlyIfNewer(true)
}

task downloadAndUnzipFile(dependsOn: downloadZipFile, type: Copy) {
    from zipTree(downloadZipFile.dest)
    into buildDir
}

test.dependsOn(downloadAndUnzipFile)
